
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  password: 'password',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  phone: 'phone',
  birth_date: 'birth_date',
  address: 'address',
  profile_image: 'profile_image',
  membership_type: 'membership_type',
  points: 'points',
  rating: 'rating',
  total_bookings: 'total_bookings',
  joined_at: 'joined_at',
  last_active: 'last_active',
  password: 'password',
  google_id: 'google_id',
  is_email_verified: 'is_email_verified'
};

exports.Prisma.AsramaScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  city: 'city',
  province: 'province',
  contact_no: 'contact_no',
  lat: 'lat',
  lng: 'lng',
  admin_id: 'admin_id',
  description: 'description',
  images: 'images',
  rating: 'rating',
  total_reviews: 'total_reviews',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BuildingScalarFieldEnum = {
  id: 'id',
  name: 'name',
  asrama_id: 'asrama_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SpacePricingScalarFieldEnum = {
  id: 'id',
  spaceId: 'spaceId',
  durationType: 'durationType',
  category: 'category',
  price: 'price'
};

exports.Prisma.SpaceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  capacity: 'capacity',
  price_per_day: 'price_per_day',
  images: 'images',
  amenities: 'amenities',
  asrama_id: 'asrama_id',
  building_id: 'building_id',
  floorId: 'floorId',
  description: 'description',
  size: 'size',
  rating: 'rating',
  total_reviews: 'total_reviews',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FloorScalarFieldEnum = {
  id: 'id',
  number: 'number',
  name: 'name',
  buildingId: 'buildingId'
};

exports.Prisma.PaymentMethodScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  card_number: 'card_number',
  card_holder: 'card_holder',
  expiry_month: 'expiry_month',
  expiry_year: 'expiry_year',
  is_default: 'is_default',
  is_active: 'is_active',
  created_at: 'created_at'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  space_id: 'space_id',
  user_id: 'user_id',
  check_in: 'check_in',
  check_out: 'check_out',
  total_days: 'total_days',
  total_price: 'total_price',
  status: 'status',
  snap_token: 'snap_token',
  payment_method_id: 'payment_method_id',
  paid_at: 'paid_at',
  guest_count: 'guest_count',
  special_requests: 'special_requests',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserFavoriteScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  space_id: 'space_id',
  added_at: 'added_at'
};

exports.Prisma.UserNotificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  booking_reminders: 'booking_reminders',
  promotional_offers: 'promotional_offers',
  newsletter: 'newsletter',
  upcoming_bookings: 'upcoming_bookings',
  email_notifications: 'email_notifications',
  push_notifications: 'push_notifications'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  booking_id: 'booking_id',
  user_id: 'user_id',
  space_id: 'space_id',
  rating: 'rating',
  comment: 'comment',
  cleanliness: 'cleanliness',
  location: 'location',
  amenities: 'amenities',
  service: 'service',
  created_at: 'created_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  message: 'message',
  type: 'type',
  is_read: 'is_read',
  data: 'data',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  password: 'password'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  phone: 'phone',
  address: 'address',
  profile_image: 'profile_image',
  password: 'password',
  google_id: 'google_id'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.AsramaOrderByRelevanceFieldEnum = {
  name: 'name',
  address: 'address',
  city: 'city',
  province: 'province',
  contact_no: 'contact_no',
  description: 'description'
};

exports.Prisma.BuildingOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.SpaceOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.FloorOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.PaymentMethodOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  card_number: 'card_number',
  card_holder: 'card_holder'
};

exports.Prisma.BookingOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  snap_token: 'snap_token',
  payment_method_id: 'payment_method_id',
  special_requests: 'special_requests',
  notes: 'notes'
};

exports.Prisma.UserFavoriteOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.UserNotificationOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  id: 'id',
  booking_id: 'booking_id',
  user_id: 'user_id',
  comment: 'comment'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  message: 'message'
};
exports.MembershipType = exports.$Enums.MembershipType = {
  REGULAR: 'REGULAR',
  PREMIUM: 'PREMIUM',
  VIP: 'VIP'
};

exports.DurationType = exports.$Enums.DurationType = {
  PER_DAY: 'PER_DAY',
  PER_8H: 'PER_8H',
  PER_12H: 'PER_12H',
  PER_PERSON: 'PER_PERSON'
};

exports.Category = exports.$Enums.Category = {
  DEWASA: 'DEWASA',
  ANAK: 'ANAK',
  GENERAL: 'GENERAL'
};

exports.SpaceType = exports.$Enums.SpaceType = {
  KAMAR: 'KAMAR',
  RUANG_RAPAT: 'RUANG_RAPAT',
  AULA: 'AULA',
  MANASIK: 'MANASIK'
};

exports.PaymentType = exports.$Enums.PaymentType = {
  CREDIT_CARD: 'CREDIT_CARD',
  DEBIT_CARD: 'DEBIT_CARD',
  VISA: 'VISA',
  MASTERCARD: 'MASTERCARD',
  BANK_TRANSFER: 'BANK_TRANSFER'
};

exports.BookingStatus = exports.$Enums.BookingStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  PAID: 'PAID',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  BOOKING_CONFIRMATION: 'BOOKING_CONFIRMATION',
  BOOKING_REMINDER: 'BOOKING_REMINDER',
  PAYMENT_SUCCESS: 'PAYMENT_SUCCESS',
  PAYMENT_FAILED: 'PAYMENT_FAILED',
  PROMOTIONAL: 'PROMOTIONAL',
  SYSTEM_UPDATE: 'SYSTEM_UPDATE',
  REVIEW_REQUEST: 'REVIEW_REQUEST'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  User: 'User',
  Asrama: 'Asrama',
  Building: 'Building',
  SpacePricing: 'SpacePricing',
  Space: 'Space',
  Floor: 'Floor',
  PaymentMethod: 'PaymentMethod',
  Booking: 'Booking',
  UserFavorite: 'UserFavorite',
  UserNotification: 'UserNotification',
  Review: 'Review',
  Notification: 'Notification'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
